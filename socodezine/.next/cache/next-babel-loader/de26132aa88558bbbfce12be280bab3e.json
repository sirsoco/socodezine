{"ast":null,"code":"var _jsxFileName = \"/Users/solo/Desktop/sirsoco/socodezine/socodezine/components/Launch/Launch.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from \"react\";\nexport default function Launch() {\n  const {\n    0: date,\n    1: setDay\n  } = useState({\n    day: \"\",\n    hour: \"\",\n    minutes: \"\",\n    seconds: \"\"\n  });\n\n  const countFunc = () => {\n    //date for counter\n    var countDownDate = new Date('Sep 10, 00:00:00').getTime(); //current date\n\n    var now = new Date.getTime(); //updated time\n\n    var distance = countDownDate - now; // Time calculations for days, hours, and minutes and seconds \n\n    var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n    var minute = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n    var second = Math.floor(distance % (1000 * 60) / 1000);\n    setDay({\n      day: days,\n      hour: hours,\n      minutes: minutes,\n      seconds: second\n    });\n  };\n\n  return __jsx(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Coming Soon \", date.day, \" \"));\n}","map":{"version":3,"sources":["/Users/solo/Desktop/sirsoco/socodezine/socodezine/components/Launch/Launch.js"],"names":["React","useContext","useState","Launch","date","setDay","day","hour","minutes","seconds","countFunc","countDownDate","Date","getTime","now","distance","days","Math","floor","hours","minute","second"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC7B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAiBH,QAAQ,CAAC;AAC5BI,IAAAA,GAAG,EAAE,EADuB;AAE5BC,IAAAA,IAAI,EAAE,EAFsB;AAG5BC,IAAAA,OAAO,EAAE,EAHmB;AAI5BC,IAAAA,OAAO,EAAE;AAJmB,GAAD,CAA/B;;AAOA,QAAMC,SAAS,GAAG,MAAM;AACnB;AACL,QAAIC,aAAa,GAAG,IAAIC,IAAJ,CAAS,kBAAT,EAA6BC,OAA7B,EAApB,CAFwB,CAGxB;;AACA,QAAIC,GAAG,GAAG,IAAIF,IAAI,CAACC,OAAT,EAAV,CAJwB,CAKxB;;AACA,QAAIE,QAAQ,GAAGJ,aAAa,GAAGG,GAA/B,CANwB,CAOxB;;AACA,QAAIE,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CAAX;AAEA,QAAII,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CAAX,CAAZ;AACA,QAAIK,MAAM,GAAGH,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CAAb;AACA,QAAIM,MAAM,GAAGJ,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAb;AACAV,IAAAA,MAAM,CAAC;AACHC,MAAAA,GAAG,EAAEU,IADF;AAEHT,MAAAA,IAAI,EAAEY,KAFH;AAGHX,MAAAA,OAAO,EAAEA,OAHN;AAIHC,MAAAA,OAAO,EAAEY;AAJN,KAAD,CAAN;AAMC,GAnBD;;AAqBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBjB,IAAI,CAACE,GAAtB,MADJ,CADJ;AAKH","sourcesContent":["import React, {useContext, useState} from \"react\";\n\nexport default function Launch() {\n    const [date, setDay] = useState({\n        day: \"\",\n        hour: \"\",\n        minutes: \"\",\n        seconds: \"\"\n    })\n\n    const countFunc = () => {\n         //date for counter\n    var countDownDate = new Date('Sep 10, 00:00:00').getTime();\n    //current date\n    var now = new Date.getTime();\n    //updated time\n    var distance = countDownDate - now;\n    // Time calculations for days, hours, and minutes and seconds \n    var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        \n    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    var minute = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    var second = Math.floor((distance % (1000 * 60)) / 1000);\n    setDay({\n        day: days,\n        hour: hours,\n        minutes: minutes,\n        seconds: second\n    })\n    }\n    \n    return (\n        <body>\n            <h2>Coming Soon {date.day} </h2>\n        </body>\n    )\n}"]},"metadata":{},"sourceType":"module"}